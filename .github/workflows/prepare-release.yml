name: Prepare Release

on:
  # https://docs.github.com/en/webhooks/webhook-events-and-payloads#workflow_dispatch
  workflow_dispatch:
    inputs:
      version:
        description: The version to release.
        required: true
      branch-sha:
        description: The SHA to from which to create the target branch if missing.
        default: ${{ github.event.repository.default_branch }}

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to main will not cancel.
  group: ${{ github.workflow }}-${{ inputs.version }}
  cancel-in-progress: true

jobs:
  prepare:
    if: '!github.event.repository.fork'
    runs-on: ubuntu-latest
    steps:
      - name: Get Branch
        shell: python
        run: |
          from os import environ
          from pathlib import Path

          # derive the branch from the version by dropping the `PATCH` and using `.x`
          branch = "${{ inputs.version }}".rsplit(".", 1)[0]
          Path(environ["GITHUB_ENV"]).write_text(f"BRANCH={branch}.x")

      - name: Prepare Release
        uses: conda/actions/prepare-release@prepare-release
        with:
          version: ${{ inputs.version }}
          branch: ${{ env.BRANCH }}
          branch-sha: ${{ inputs.branch-sha }}
          token: ${{ secrets.PREPARE_RELEASE_PR }}
          fork-token: ${{ secrets.PREPARE_RELEASE_FORK }}
